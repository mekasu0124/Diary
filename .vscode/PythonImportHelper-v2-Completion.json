[
    {
        "label": "*",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "ttk",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "Tk",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "Frame",
        "importPath": "tkinter.ttk",
        "description": "tkinter.ttk",
        "isExtraImport": true,
        "detail": "tkinter.ttk",
        "documentation": {}
    },
    {
        "label": "Label",
        "importPath": "tkinter.ttk",
        "description": "tkinter.ttk",
        "isExtraImport": true,
        "detail": "tkinter.ttk",
        "documentation": {}
    },
    {
        "label": "Button",
        "importPath": "tkinter.ttk",
        "description": "tkinter.ttk",
        "isExtraImport": true,
        "detail": "tkinter.ttk",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Middleware",
        "importPath": "starlette.middleware",
        "description": "starlette.middleware",
        "isExtraImport": true,
        "detail": "starlette.middleware",
        "documentation": {}
    },
    {
        "label": "CORSMiddleware",
        "importPath": "starlette.middleware.cors",
        "description": "starlette.middleware.cors",
        "isExtraImport": true,
        "detail": "starlette.middleware.cors",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "Main",
        "kind": 6,
        "importPath": "client.main",
        "description": "client.main",
        "peekOfCode": "class Main(Tk):\n    def __init__(self):\n        super().__init__()\n        self.UiComponents()\n    def UiComponents(self):\n        frame = Frame(self, padding=10)\n        frame.grid()\n        Label(frame, text=\"Hello World!\").grid(column=0, row=0)\n        Button(frame, text=\"Quit\", command=self.destroy).grid(column=1, row=0)\nif __name__ == '__main__':",
        "detail": "client.main",
        "documentation": {}
    },
    {
        "label": "root",
        "kind": 5,
        "importPath": "client.main",
        "description": "client.main",
        "peekOfCode": "root = Tk()\nfrm = ttk.Frame(root, padding=10)\nfrm.grid()\nttk.Label(frm, text=\"Hello World!\").grid(column=0, row=0)\nttk.Button(frm, text=\"Quit\", command=root.destroy).grid(column=1, row=0)\nroot.mainloop()\n\"\"\"\n# trying to turn it into a class\nfrom tkinter import Tk\nfrom tkinter.ttk import Frame, Label, Button",
        "detail": "client.main",
        "documentation": {}
    },
    {
        "label": "frm",
        "kind": 5,
        "importPath": "client.main",
        "description": "client.main",
        "peekOfCode": "frm = ttk.Frame(root, padding=10)\nfrm.grid()\nttk.Label(frm, text=\"Hello World!\").grid(column=0, row=0)\nttk.Button(frm, text=\"Quit\", command=root.destroy).grid(column=1, row=0)\nroot.mainloop()\n\"\"\"\n# trying to turn it into a class\nfrom tkinter import Tk\nfrom tkinter.ttk import Frame, Label, Button\nclass Main(Tk):",
        "detail": "client.main",
        "documentation": {}
    },
    {
        "label": "print_greeting",
        "kind": 2,
        "importPath": "server.main",
        "description": "server.main",
        "peekOfCode": "def print_greeting():\n    with open(\"./server_info.json\", 'r', encoding=\"utf-8-sig\") as f:\n        data = json.load(f)\n        print(\"~\"*30)\n        print(\"~\"*30)\n        print(f\"Welcome To {data[\"server_info\"][\"app_name\"]}'s Server!\")\n        for info in data[\"server_info\"]:\n            if info == \"app_name\":\n                continue\n            title = info",
        "detail": "server.main",
        "documentation": {}
    },
    {
        "label": "cors_middleware",
        "kind": 5,
        "importPath": "server.main",
        "description": "server.main",
        "peekOfCode": "cors_middleware = [\n    Middleware(\n        CORSMiddleware,\n        allow_credentials=True,\n        allow_headers=[\"*\"],\n        allow_methods=[\"*\"],\n        allow_origins=['http://localhost:3000', 'http://localhost:3001'],\n    )\n]\napp = FastAPI(middleware = cors_middleware)",
        "detail": "server.main",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "server.main",
        "description": "server.main",
        "peekOfCode": "app = FastAPI(middleware = cors_middleware)\n@app.get(\"/\")\nasync def read_root():\n    return { \"message\": \"Hello World from Diary's Serveeeer!\" }\ndef print_greeting():\n    with open(\"./server_info.json\", 'r', encoding=\"utf-8-sig\") as f:\n        data = json.load(f)\n        print(\"~\"*30)\n        print(\"~\"*30)\n        print(f\"Welcome To {data[\"server_info\"][\"app_name\"]}'s Server!\")",
        "detail": "server.main",
        "documentation": {}
    },
    {
        "label": "curr_dir",
        "kind": 5,
        "importPath": "server.test",
        "description": "server.test",
        "peekOfCode": "curr_dir = os.getcwd()\nserver_dir = os.path.join(curr_dir, \"server\")\nfile = os.path.join(server_dir, \"server_info.json\")\nwith open(file, 'r', encoding=\"utf-8-sig\") as f:\n    data = json.load(f)\n    # for index, value in enumerate(data[\"server_info\"]):\n    for info in data[\"server_info\"]:\n        title = info\n        text = data[\"server_info\"][title]\n        print(title)",
        "detail": "server.test",
        "documentation": {}
    },
    {
        "label": "server_dir",
        "kind": 5,
        "importPath": "server.test",
        "description": "server.test",
        "peekOfCode": "server_dir = os.path.join(curr_dir, \"server\")\nfile = os.path.join(server_dir, \"server_info.json\")\nwith open(file, 'r', encoding=\"utf-8-sig\") as f:\n    data = json.load(f)\n    # for index, value in enumerate(data[\"server_info\"]):\n    for info in data[\"server_info\"]:\n        title = info\n        text = data[\"server_info\"][title]\n        print(title)\n        print(text)",
        "detail": "server.test",
        "documentation": {}
    },
    {
        "label": "file",
        "kind": 5,
        "importPath": "server.test",
        "description": "server.test",
        "peekOfCode": "file = os.path.join(server_dir, \"server_info.json\")\nwith open(file, 'r', encoding=\"utf-8-sig\") as f:\n    data = json.load(f)\n    # for index, value in enumerate(data[\"server_info\"]):\n    for info in data[\"server_info\"]:\n        title = info\n        text = data[\"server_info\"][title]\n        print(title)\n        print(text)\n        print(\"\\n\")",
        "detail": "server.test",
        "documentation": {}
    }
]